import sys
input = sys.stdin.readline

def check(s, row, column):
    num = s[row][column]
    for i in range(9):
        if i == column:
            pass
        elif s[row][i] == num:
            return False
    for i in range(9):
        if i == row:
            pass
        elif s[i][column] == num:
            return False
    if row < 3:
        if column < 3:
            copy_s = [x[:3] for x in s[:3]]
            copy_row, copy_column = row, column
        elif column  < 6:
            copy_s = [x[3:6] for x in s[:3]]
            copy_row, copy_column = row, column - 3
        else:
            copy_s = [x[6:] for x in s[:3]]
            copy_row, copy_column = row, column - 6
    elif row < 6:
        if column < 3:
            copy_s = [x[:3] for x in s[3:6]]
            copy_row, copy_column = row-3, column
        elif column < 6:
            copy_s = [x[3:6] for x in s[3:6]]
            copy_row, copy_column = row-3, column-3
        else:
            copy_s = [x[6:] for x in s[3:6]] 
            copy_row, copy_column = row-3, column-6
    else:
        if column < 3:
            copy_s = [x[:3] for x in s[6:]]
            copy_row, copy_column = row-6, column
        elif column < 6:
            copy_s = [x[3:6] for x in s[6:]]
            copy_row, copy_column = row-6, column-3
        else:
            copy_s = [x[6:] for x in s[6:]]
            copy_row, copy_column = row-6, column-6
    for i in range(3):
        for j in range(3):
            if i == copy_row and j == copy_column:
                pass
            elif copy_s[i][j] == num:
                return False
    return True

def dfs(sudoku, zero_list, idx):
    if idx > len(zero_list)-1:
        for i in sudoku:
            for j in i:
                print(j, end=" ")
            print()
        exit(0)
    blank = zero_list[idx]
    x, y = blank[0], blank[1]
    for i in range(1, 10):
        sudoku[x][y] = i
        if check(sudoku, x, y):
             dfs(sudoku, zero_list, idx+1)
        sudoku[x][y] = 0 
    
            
sudoku = []

for i in range(9):
    sub_sudoku = list(map(int, input().split()))
    sudoku.append(sub_sudoku)
zero_spot = []    
for i in range(9): 
    for j in range(9):
        if sudoku[i][j] == 0:
            zero_spot.append([i, j])
dfs(sudoku, zero_spot, 0)
